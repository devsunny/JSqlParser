package com.asksunny.jdbc;


public class SunnyJDBCVTableMaps implements  SunnyJdbcDriverConstants {
    public final static java.util.HashMap<Integer, String> DBMD_I2FN_MAP = new java.util.HashMap<Integer, String>();
    public final static java.util.HashMap<String, Integer> DBMD_FN2I_MAP = new java.util.HashMap<String, Integer>();
    public final static java.util.HashMap<Integer, String> RSMD_I2FN_MAP = new java.util.HashMap<Integer, String>();
    public final static java.util.HashMap<String, Integer> RSMD_FN2I_MAP = new java.util.HashMap<String, Integer>();
    public final static java.util.HashMap<Integer, String> PARAMMD_I2FN_MAP = new java.util.HashMap<Integer, String>();
    public final static java.util.HashMap<String, Integer> PARAMMD_FN2I_MAP = new java.util.HashMap<String, Integer>();
    public final static java.util.HashMap<Integer, String> RS_I2FN_MAP = new java.util.HashMap<Integer, String>();
    public final static java.util.HashMap<String, Integer> RS_FN2I_MAP = new java.util.HashMap<String, Integer>();
    public final static java.util.HashMap<Integer, String> STMT_I2FN_MAP = new java.util.HashMap<Integer, String>();
    public final static java.util.HashMap<String, Integer> STMT_FN2I_MAP = new java.util.HashMap<String, Integer>();
    public final static java.util.HashMap<Integer, String> CONN_I2FN_MAP = new java.util.HashMap<Integer, String>();
    public final static java.util.HashMap<String, Integer> CONN_FN2I_MAP = new java.util.HashMap<String, Integer>();
    static {
        DBMD_I2FN_MAP.put(101, "getURL");
        DBMD_FN2I_MAP.put("getURL", 101);
        DBMD_I2FN_MAP.put(102, "isReadOnly");
        DBMD_FN2I_MAP.put("isReadOnly", 102);
        DBMD_I2FN_MAP.put(103, "getAttributes");
        DBMD_FN2I_MAP.put("getAttributes", 103);
        DBMD_I2FN_MAP.put(104, "supportsDataDefinitionAndDataManipulationTransactions");
        DBMD_FN2I_MAP.put("supportsDataDefinitionAndDataManipulationTransactions", 104);
        DBMD_I2FN_MAP.put(105, "getCatalogs");
        DBMD_FN2I_MAP.put("getCatalogs", 105);
        DBMD_I2FN_MAP.put(106, "getColumns");
        DBMD_FN2I_MAP.put("getColumns", 106);
        DBMD_I2FN_MAP.put(107, "getFunctions");
        DBMD_FN2I_MAP.put("getFunctions", 107);
        DBMD_I2FN_MAP.put(108, "getIndexInfo");
        DBMD_FN2I_MAP.put("getIndexInfo", 108);
        DBMD_I2FN_MAP.put(109, "getSchemas");
        DBMD_FN2I_MAP.put("getSchemas", 109);
        DBMD_I2FN_MAP.put(110, "getSchemas");
        DBMD_FN2I_MAP.put("getSchemas", 110);
        DBMD_I2FN_MAP.put(111, "getTables");
        DBMD_FN2I_MAP.put("getTables", 111);
        DBMD_I2FN_MAP.put(112, "getTypeInfo");
        DBMD_FN2I_MAP.put("getTypeInfo", 112);
        DBMD_I2FN_MAP.put(113, "getUDTs");
        DBMD_FN2I_MAP.put("getUDTs", 113);
        DBMD_I2FN_MAP.put(114, "getUserName");
        DBMD_FN2I_MAP.put("getUserName", 114);
        DBMD_I2FN_MAP.put(115, "updatesAreDetected");
        DBMD_FN2I_MAP.put("updatesAreDetected", 115);
        DBMD_I2FN_MAP.put(116, "usesLocalFilePerTable");
        DBMD_FN2I_MAP.put("usesLocalFilePerTable", 116);
        DBMD_I2FN_MAP.put(117, "usesLocalFiles");
        DBMD_FN2I_MAP.put("usesLocalFiles", 117);
        DBMD_I2FN_MAP.put(118, "allProceduresAreCallable");
        DBMD_FN2I_MAP.put("allProceduresAreCallable", 118);
        DBMD_I2FN_MAP.put(119, "allTablesAreSelectable");
        DBMD_FN2I_MAP.put("allTablesAreSelectable", 119);
        DBMD_I2FN_MAP.put(120, "deletesAreDetected");
        DBMD_FN2I_MAP.put("deletesAreDetected", 120);
        DBMD_I2FN_MAP.put(121, "doesMaxRowSizeIncludeBlobs");
        DBMD_FN2I_MAP.put("doesMaxRowSizeIncludeBlobs", 121);
        DBMD_I2FN_MAP.put(122, "generatedKeyAlwaysReturned");
        DBMD_FN2I_MAP.put("generatedKeyAlwaysReturned", 122);
        DBMD_I2FN_MAP.put(123, "getBestRowIdentifier");
        DBMD_FN2I_MAP.put("getBestRowIdentifier", 123);
        DBMD_I2FN_MAP.put(124, "getCatalogSeparator");
        DBMD_FN2I_MAP.put("getCatalogSeparator", 124);
        DBMD_I2FN_MAP.put(125, "getCatalogTerm");
        DBMD_FN2I_MAP.put("getCatalogTerm", 125);
        DBMD_I2FN_MAP.put(126, "getClientInfoProperties");
        DBMD_FN2I_MAP.put("getClientInfoProperties", 126);
        DBMD_I2FN_MAP.put(127, "getColumnPrivileges");
        DBMD_FN2I_MAP.put("getColumnPrivileges", 127);
        DBMD_I2FN_MAP.put(128, "getConnection");
        DBMD_FN2I_MAP.put("getConnection", 128);
        DBMD_I2FN_MAP.put(129, "getCrossReference");
        DBMD_FN2I_MAP.put("getCrossReference", 129);
        DBMD_I2FN_MAP.put(130, "getDatabaseMajorVersion");
        DBMD_FN2I_MAP.put("getDatabaseMajorVersion", 130);
        DBMD_I2FN_MAP.put(131, "getDatabaseMinorVersion");
        DBMD_FN2I_MAP.put("getDatabaseMinorVersion", 131);
        DBMD_I2FN_MAP.put(132, "getDatabaseProductName");
        DBMD_FN2I_MAP.put("getDatabaseProductName", 132);
        DBMD_I2FN_MAP.put(133, "getDatabaseProductVersion");
        DBMD_FN2I_MAP.put("getDatabaseProductVersion", 133);
        DBMD_I2FN_MAP.put(134, "getDriverMajorVersion");
        DBMD_FN2I_MAP.put("getDriverMajorVersion", 134);
        DBMD_I2FN_MAP.put(135, "getDriverMinorVersion");
        DBMD_FN2I_MAP.put("getDriverMinorVersion", 135);
        DBMD_I2FN_MAP.put(136, "getDriverName");
        DBMD_FN2I_MAP.put("getDriverName", 136);
        DBMD_I2FN_MAP.put(137, "getDriverVersion");
        DBMD_FN2I_MAP.put("getDriverVersion", 137);
        DBMD_I2FN_MAP.put(138, "getExportedKeys");
        DBMD_FN2I_MAP.put("getExportedKeys", 138);
        DBMD_I2FN_MAP.put(139, "getExtraNameCharacters");
        DBMD_FN2I_MAP.put("getExtraNameCharacters", 139);
        DBMD_I2FN_MAP.put(140, "getFunctionColumns");
        DBMD_FN2I_MAP.put("getFunctionColumns", 140);
        DBMD_I2FN_MAP.put(141, "getIdentifierQuoteString");
        DBMD_FN2I_MAP.put("getIdentifierQuoteString", 141);
        DBMD_I2FN_MAP.put(142, "getImportedKeys");
        DBMD_FN2I_MAP.put("getImportedKeys", 142);
        DBMD_I2FN_MAP.put(143, "getJDBCMajorVersion");
        DBMD_FN2I_MAP.put("getJDBCMajorVersion", 143);
        DBMD_I2FN_MAP.put(144, "getJDBCMinorVersion");
        DBMD_FN2I_MAP.put("getJDBCMinorVersion", 144);
        DBMD_I2FN_MAP.put(145, "getMaxBinaryLiteralLength");
        DBMD_FN2I_MAP.put("getMaxBinaryLiteralLength", 145);
        DBMD_I2FN_MAP.put(146, "getMaxCatalogNameLength");
        DBMD_FN2I_MAP.put("getMaxCatalogNameLength", 146);
        DBMD_I2FN_MAP.put(147, "getMaxCharLiteralLength");
        DBMD_FN2I_MAP.put("getMaxCharLiteralLength", 147);
        DBMD_I2FN_MAP.put(148, "getMaxColumnNameLength");
        DBMD_FN2I_MAP.put("getMaxColumnNameLength", 148);
        DBMD_I2FN_MAP.put(149, "getMaxColumnsInGroupBy");
        DBMD_FN2I_MAP.put("getMaxColumnsInGroupBy", 149);
        DBMD_I2FN_MAP.put(150, "getMaxColumnsInIndex");
        DBMD_FN2I_MAP.put("getMaxColumnsInIndex", 150);
        DBMD_I2FN_MAP.put(151, "getMaxColumnsInOrderBy");
        DBMD_FN2I_MAP.put("getMaxColumnsInOrderBy", 151);
        DBMD_I2FN_MAP.put(152, "getMaxColumnsInSelect");
        DBMD_FN2I_MAP.put("getMaxColumnsInSelect", 152);
        DBMD_I2FN_MAP.put(153, "getMaxColumnsInTable");
        DBMD_FN2I_MAP.put("getMaxColumnsInTable", 153);
        DBMD_I2FN_MAP.put(154, "getMaxConnections");
        DBMD_FN2I_MAP.put("getMaxConnections", 154);
        DBMD_I2FN_MAP.put(155, "getMaxCursorNameLength");
        DBMD_FN2I_MAP.put("getMaxCursorNameLength", 155);
        DBMD_I2FN_MAP.put(156, "getMaxIndexLength");
        DBMD_FN2I_MAP.put("getMaxIndexLength", 156);
        DBMD_I2FN_MAP.put(157, "getMaxProcedureNameLength");
        DBMD_FN2I_MAP.put("getMaxProcedureNameLength", 157);
        DBMD_I2FN_MAP.put(158, "getMaxRowSize");
        DBMD_FN2I_MAP.put("getMaxRowSize", 158);
        DBMD_I2FN_MAP.put(159, "getMaxSchemaNameLength");
        DBMD_FN2I_MAP.put("getMaxSchemaNameLength", 159);
        DBMD_I2FN_MAP.put(160, "getMaxStatementLength");
        DBMD_FN2I_MAP.put("getMaxStatementLength", 160);
        DBMD_I2FN_MAP.put(161, "getMaxStatements");
        DBMD_FN2I_MAP.put("getMaxStatements", 161);
        DBMD_I2FN_MAP.put(162, "getMaxTableNameLength");
        DBMD_FN2I_MAP.put("getMaxTableNameLength", 162);
        DBMD_I2FN_MAP.put(163, "getMaxTablesInSelect");
        DBMD_FN2I_MAP.put("getMaxTablesInSelect", 163);
        DBMD_I2FN_MAP.put(164, "getMaxUserNameLength");
        DBMD_FN2I_MAP.put("getMaxUserNameLength", 164);
        DBMD_I2FN_MAP.put(165, "getNumericFunctions");
        DBMD_FN2I_MAP.put("getNumericFunctions", 165);
        DBMD_I2FN_MAP.put(166, "getPrimaryKeys");
        DBMD_FN2I_MAP.put("getPrimaryKeys", 166);
        DBMD_I2FN_MAP.put(167, "getProcedureColumns");
        DBMD_FN2I_MAP.put("getProcedureColumns", 167);
        DBMD_I2FN_MAP.put(168, "getProcedureTerm");
        DBMD_FN2I_MAP.put("getProcedureTerm", 168);
        DBMD_I2FN_MAP.put(169, "getProcedures");
        DBMD_FN2I_MAP.put("getProcedures", 169);
        DBMD_I2FN_MAP.put(170, "getPseudoColumns");
        DBMD_FN2I_MAP.put("getPseudoColumns", 170);
        DBMD_I2FN_MAP.put(171, "getResultSetHoldability");
        DBMD_FN2I_MAP.put("getResultSetHoldability", 171);
        DBMD_I2FN_MAP.put(172, "getRowIdLifetime");
        DBMD_FN2I_MAP.put("getRowIdLifetime", 172);
        DBMD_I2FN_MAP.put(173, "getSQLKeywords");
        DBMD_FN2I_MAP.put("getSQLKeywords", 173);
        DBMD_I2FN_MAP.put(174, "getSQLStateType");
        DBMD_FN2I_MAP.put("getSQLStateType", 174);
        DBMD_I2FN_MAP.put(175, "getSchemaTerm");
        DBMD_FN2I_MAP.put("getSchemaTerm", 175);
        DBMD_I2FN_MAP.put(176, "getSearchStringEscape");
        DBMD_FN2I_MAP.put("getSearchStringEscape", 176);
        DBMD_I2FN_MAP.put(177, "getStringFunctions");
        DBMD_FN2I_MAP.put("getStringFunctions", 177);
        DBMD_I2FN_MAP.put(178, "getSuperTables");
        DBMD_FN2I_MAP.put("getSuperTables", 178);
        DBMD_I2FN_MAP.put(179, "getSuperTypes");
        DBMD_FN2I_MAP.put("getSuperTypes", 179);
        DBMD_I2FN_MAP.put(180, "getSystemFunctions");
        DBMD_FN2I_MAP.put("getSystemFunctions", 180);
        DBMD_I2FN_MAP.put(181, "getTablePrivileges");
        DBMD_FN2I_MAP.put("getTablePrivileges", 181);
        DBMD_I2FN_MAP.put(182, "getTableTypes");
        DBMD_FN2I_MAP.put("getTableTypes", 182);
        DBMD_I2FN_MAP.put(183, "getTimeDateFunctions");
        DBMD_FN2I_MAP.put("getTimeDateFunctions", 183);
        DBMD_I2FN_MAP.put(184, "getVersionColumns");
        DBMD_FN2I_MAP.put("getVersionColumns", 184);
        DBMD_I2FN_MAP.put(185, "insertsAreDetected");
        DBMD_FN2I_MAP.put("insertsAreDetected", 185);
        DBMD_I2FN_MAP.put(186, "isCatalogAtStart");
        DBMD_FN2I_MAP.put("isCatalogAtStart", 186);
        DBMD_I2FN_MAP.put(187, "locatorsUpdateCopy");
        DBMD_FN2I_MAP.put("locatorsUpdateCopy", 187);
        DBMD_I2FN_MAP.put(188, "nullPlusNonNullIsNull");
        DBMD_FN2I_MAP.put("nullPlusNonNullIsNull", 188);
        DBMD_I2FN_MAP.put(189, "nullsAreSortedAtEnd");
        DBMD_FN2I_MAP.put("nullsAreSortedAtEnd", 189);
        DBMD_I2FN_MAP.put(190, "nullsAreSortedAtStart");
        DBMD_FN2I_MAP.put("nullsAreSortedAtStart", 190);
        DBMD_I2FN_MAP.put(191, "nullsAreSortedHigh");
        DBMD_FN2I_MAP.put("nullsAreSortedHigh", 191);
        DBMD_I2FN_MAP.put(192, "nullsAreSortedLow");
        DBMD_FN2I_MAP.put("nullsAreSortedLow", 192);
        DBMD_I2FN_MAP.put(193, "othersDeletesAreVisible");
        DBMD_FN2I_MAP.put("othersDeletesAreVisible", 193);
        DBMD_I2FN_MAP.put(194, "othersInsertsAreVisible");
        DBMD_FN2I_MAP.put("othersInsertsAreVisible", 194);
        DBMD_I2FN_MAP.put(195, "othersUpdatesAreVisible");
        DBMD_FN2I_MAP.put("othersUpdatesAreVisible", 195);
        DBMD_I2FN_MAP.put(196, "ownDeletesAreVisible");
        DBMD_FN2I_MAP.put("ownDeletesAreVisible", 196);
        DBMD_I2FN_MAP.put(197, "ownInsertsAreVisible");
        DBMD_FN2I_MAP.put("ownInsertsAreVisible", 197);
        DBMD_I2FN_MAP.put(198, "ownUpdatesAreVisible");
        DBMD_FN2I_MAP.put("ownUpdatesAreVisible", 198);
        DBMD_I2FN_MAP.put(199, "storesLowerCaseIdentifiers");
        DBMD_FN2I_MAP.put("storesLowerCaseIdentifiers", 199);
        DBMD_I2FN_MAP.put(200, "storesMixedCaseIdentifiers");
        DBMD_FN2I_MAP.put("storesMixedCaseIdentifiers", 200);
        DBMD_I2FN_MAP.put(201, "storesUpperCaseIdentifiers");
        DBMD_FN2I_MAP.put("storesUpperCaseIdentifiers", 201);
        DBMD_I2FN_MAP.put(202, "supportsANSI92EntryLevelSQL");
        DBMD_FN2I_MAP.put("supportsANSI92EntryLevelSQL", 202);
        DBMD_I2FN_MAP.put(203, "supportsANSI92FullSQL");
        DBMD_FN2I_MAP.put("supportsANSI92FullSQL", 203);
        DBMD_I2FN_MAP.put(204, "supportsBatchUpdates");
        DBMD_FN2I_MAP.put("supportsBatchUpdates", 204);
        DBMD_I2FN_MAP.put(205, "supportsColumnAliasing");
        DBMD_FN2I_MAP.put("supportsColumnAliasing", 205);
        DBMD_I2FN_MAP.put(206, "supportsConvert");
        DBMD_FN2I_MAP.put("supportsConvert", 206);
        DBMD_I2FN_MAP.put(207, "supportsConvert");
        DBMD_FN2I_MAP.put("supportsConvert", 207);
        DBMD_I2FN_MAP.put(208, "supportsCoreSQLGrammar");
        DBMD_FN2I_MAP.put("supportsCoreSQLGrammar", 208);
        DBMD_I2FN_MAP.put(209, "supportsCorrelatedSubqueries");
        DBMD_FN2I_MAP.put("supportsCorrelatedSubqueries", 209);
        DBMD_I2FN_MAP.put(210, "supportsExpressionsInOrderBy");
        DBMD_FN2I_MAP.put("supportsExpressionsInOrderBy", 210);
        DBMD_I2FN_MAP.put(211, "supportsExtendedSQLGrammar");
        DBMD_FN2I_MAP.put("supportsExtendedSQLGrammar", 211);
        DBMD_I2FN_MAP.put(212, "supportsFullOuterJoins");
        DBMD_FN2I_MAP.put("supportsFullOuterJoins", 212);
        DBMD_I2FN_MAP.put(213, "supportsGetGeneratedKeys");
        DBMD_FN2I_MAP.put("supportsGetGeneratedKeys", 213);
        DBMD_I2FN_MAP.put(214, "supportsGroupBy");
        DBMD_FN2I_MAP.put("supportsGroupBy", 214);
        DBMD_I2FN_MAP.put(215, "supportsGroupByBeyondSelect");
        DBMD_FN2I_MAP.put("supportsGroupByBeyondSelect", 215);
        DBMD_I2FN_MAP.put(216, "supportsGroupByUnrelated");
        DBMD_FN2I_MAP.put("supportsGroupByUnrelated", 216);
        DBMD_I2FN_MAP.put(217, "supportsLikeEscapeClause");
        DBMD_FN2I_MAP.put("supportsLikeEscapeClause", 217);
        DBMD_I2FN_MAP.put(218, "supportsLimitedOuterJoins");
        DBMD_FN2I_MAP.put("supportsLimitedOuterJoins", 218);
        DBMD_I2FN_MAP.put(219, "supportsMinimumSQLGrammar");
        DBMD_FN2I_MAP.put("supportsMinimumSQLGrammar", 219);
        DBMD_I2FN_MAP.put(220, "supportsMixedCaseIdentifiers");
        DBMD_FN2I_MAP.put("supportsMixedCaseIdentifiers", 220);
        DBMD_I2FN_MAP.put(221, "supportsMultipleOpenResults");
        DBMD_FN2I_MAP.put("supportsMultipleOpenResults", 221);
        DBMD_I2FN_MAP.put(222, "supportsMultipleResultSets");
        DBMD_FN2I_MAP.put("supportsMultipleResultSets", 222);
        DBMD_I2FN_MAP.put(223, "supportsMultipleTransactions");
        DBMD_FN2I_MAP.put("supportsMultipleTransactions", 223);
        DBMD_I2FN_MAP.put(224, "supportsNamedParameters");
        DBMD_FN2I_MAP.put("supportsNamedParameters", 224);
        DBMD_I2FN_MAP.put(225, "supportsNonNullableColumns");
        DBMD_FN2I_MAP.put("supportsNonNullableColumns", 225);
        DBMD_I2FN_MAP.put(226, "supportsOrderByUnrelated");
        DBMD_FN2I_MAP.put("supportsOrderByUnrelated", 226);
        DBMD_I2FN_MAP.put(227, "supportsOuterJoins");
        DBMD_FN2I_MAP.put("supportsOuterJoins", 227);
        DBMD_I2FN_MAP.put(228, "supportsPositionedDelete");
        DBMD_FN2I_MAP.put("supportsPositionedDelete", 228);
        DBMD_I2FN_MAP.put(229, "supportsPositionedUpdate");
        DBMD_FN2I_MAP.put("supportsPositionedUpdate", 229);
        DBMD_I2FN_MAP.put(230, "supportsResultSetConcurrency");
        DBMD_FN2I_MAP.put("supportsResultSetConcurrency", 230);
        DBMD_I2FN_MAP.put(231, "supportsResultSetHoldability");
        DBMD_FN2I_MAP.put("supportsResultSetHoldability", 231);
        DBMD_I2FN_MAP.put(232, "supportsResultSetType");
        DBMD_FN2I_MAP.put("supportsResultSetType", 232);
        DBMD_I2FN_MAP.put(233, "supportsSavepoints");
        DBMD_FN2I_MAP.put("supportsSavepoints", 233);
        DBMD_I2FN_MAP.put(234, "supportsSelectForUpdate");
        DBMD_FN2I_MAP.put("supportsSelectForUpdate", 234);
        DBMD_I2FN_MAP.put(235, "supportsStatementPooling");
        DBMD_FN2I_MAP.put("supportsStatementPooling", 235);
        DBMD_I2FN_MAP.put(236, "supportsStoredProcedures");
        DBMD_FN2I_MAP.put("supportsStoredProcedures", 236);
        DBMD_I2FN_MAP.put(237, "supportsSubqueriesInExists");
        DBMD_FN2I_MAP.put("supportsSubqueriesInExists", 237);
        DBMD_I2FN_MAP.put(238, "supportsSubqueriesInIns");
        DBMD_FN2I_MAP.put("supportsSubqueriesInIns", 238);
        DBMD_I2FN_MAP.put(239, "supportsTransactions");
        DBMD_FN2I_MAP.put("supportsTransactions", 239);
        DBMD_I2FN_MAP.put(240, "supportsUnion");
        DBMD_FN2I_MAP.put("supportsUnion", 240);
        DBMD_I2FN_MAP.put(241, "supportsUnionAll");
        DBMD_FN2I_MAP.put("supportsUnionAll", 241);
        DBMD_I2FN_MAP.put(242, "autoCommitFailureClosesAllResultSets");
        DBMD_FN2I_MAP.put("autoCommitFailureClosesAllResultSets", 242);
        DBMD_I2FN_MAP.put(243, "dataDefinitionCausesTransactionCommit");
        DBMD_FN2I_MAP.put("dataDefinitionCausesTransactionCommit", 243);
        DBMD_I2FN_MAP.put(244, "dataDefinitionIgnoredInTransactions");
        DBMD_FN2I_MAP.put("dataDefinitionIgnoredInTransactions", 244);
        DBMD_I2FN_MAP.put(245, "getDefaultTransactionIsolation");
        DBMD_FN2I_MAP.put("getDefaultTransactionIsolation", 245);
        DBMD_I2FN_MAP.put(246, "storesLowerCaseQuotedIdentifiers");
        DBMD_FN2I_MAP.put("storesLowerCaseQuotedIdentifiers", 246);
        DBMD_I2FN_MAP.put(247, "storesMixedCaseQuotedIdentifiers");
        DBMD_FN2I_MAP.put("storesMixedCaseQuotedIdentifiers", 247);
        DBMD_I2FN_MAP.put(248, "storesUpperCaseQuotedIdentifiers");
        DBMD_FN2I_MAP.put("storesUpperCaseQuotedIdentifiers", 248);
        DBMD_I2FN_MAP.put(249, "supportsANSI92IntermediateSQL");
        DBMD_FN2I_MAP.put("supportsANSI92IntermediateSQL", 249);
        DBMD_I2FN_MAP.put(250, "supportsAlterTableWithAddColumn");
        DBMD_FN2I_MAP.put("supportsAlterTableWithAddColumn", 250);
        DBMD_I2FN_MAP.put(251, "supportsAlterTableWithDropColumn");
        DBMD_FN2I_MAP.put("supportsAlterTableWithDropColumn", 251);
        DBMD_I2FN_MAP.put(252, "supportsCatalogsInDataManipulation");
        DBMD_FN2I_MAP.put("supportsCatalogsInDataManipulation", 252);
        DBMD_I2FN_MAP.put(253, "supportsCatalogsInIndexDefinitions");
        DBMD_FN2I_MAP.put("supportsCatalogsInIndexDefinitions", 253);
        DBMD_I2FN_MAP.put(254, "supportsCatalogsInPrivilegeDefinitions");
        DBMD_FN2I_MAP.put("supportsCatalogsInPrivilegeDefinitions", 254);
        DBMD_I2FN_MAP.put(255, "supportsCatalogsInProcedureCalls");
        DBMD_FN2I_MAP.put("supportsCatalogsInProcedureCalls", 255);
        DBMD_I2FN_MAP.put(256, "supportsCatalogsInTableDefinitions");
        DBMD_FN2I_MAP.put("supportsCatalogsInTableDefinitions", 256);
        DBMD_I2FN_MAP.put(257, "supportsDataManipulationTransactionsOnly");
        DBMD_FN2I_MAP.put("supportsDataManipulationTransactionsOnly", 257);
        DBMD_I2FN_MAP.put(258, "supportsDifferentTableCorrelationNames");
        DBMD_FN2I_MAP.put("supportsDifferentTableCorrelationNames", 258);
        DBMD_I2FN_MAP.put(259, "supportsIntegrityEnhancementFacility");
        DBMD_FN2I_MAP.put("supportsIntegrityEnhancementFacility", 259);
        DBMD_I2FN_MAP.put(260, "supportsMixedCaseQuotedIdentifiers");
        DBMD_FN2I_MAP.put("supportsMixedCaseQuotedIdentifiers", 260);
        DBMD_I2FN_MAP.put(261, "supportsOpenCursorsAcrossCommit");
        DBMD_FN2I_MAP.put("supportsOpenCursorsAcrossCommit", 261);
        DBMD_I2FN_MAP.put(262, "supportsOpenCursorsAcrossRollback");
        DBMD_FN2I_MAP.put("supportsOpenCursorsAcrossRollback", 262);
        DBMD_I2FN_MAP.put(263, "supportsOpenStatementsAcrossCommit");
        DBMD_FN2I_MAP.put("supportsOpenStatementsAcrossCommit", 263);
        DBMD_I2FN_MAP.put(264, "supportsOpenStatementsAcrossRollback");
        DBMD_FN2I_MAP.put("supportsOpenStatementsAcrossRollback", 264);
        DBMD_I2FN_MAP.put(265, "supportsSchemasInDataManipulation");
        DBMD_FN2I_MAP.put("supportsSchemasInDataManipulation", 265);
        DBMD_I2FN_MAP.put(266, "supportsSchemasInIndexDefinitions");
        DBMD_FN2I_MAP.put("supportsSchemasInIndexDefinitions", 266);
        DBMD_I2FN_MAP.put(267, "supportsSchemasInPrivilegeDefinitions");
        DBMD_FN2I_MAP.put("supportsSchemasInPrivilegeDefinitions", 267);
        DBMD_I2FN_MAP.put(268, "supportsSchemasInProcedureCalls");
        DBMD_FN2I_MAP.put("supportsSchemasInProcedureCalls", 268);
        DBMD_I2FN_MAP.put(269, "supportsSchemasInTableDefinitions");
        DBMD_FN2I_MAP.put("supportsSchemasInTableDefinitions", 269);
        DBMD_I2FN_MAP.put(270, "supportsStoredFunctionsUsingCallSyntax");
        DBMD_FN2I_MAP.put("supportsStoredFunctionsUsingCallSyntax", 270);
        DBMD_I2FN_MAP.put(271, "supportsSubqueriesInComparisons");
        DBMD_FN2I_MAP.put("supportsSubqueriesInComparisons", 271);
        DBMD_I2FN_MAP.put(272, "supportsSubqueriesInQuantifieds");
        DBMD_FN2I_MAP.put("supportsSubqueriesInQuantifieds", 272);
        DBMD_I2FN_MAP.put(273, "supportsTableCorrelationNames");
        DBMD_FN2I_MAP.put("supportsTableCorrelationNames", 273);
        DBMD_I2FN_MAP.put(274, "supportsTransactionIsolationLevel");
        DBMD_FN2I_MAP.put("supportsTransactionIsolationLevel", 274);
        DBMD_I2FN_MAP.put(275, "unwrap");
        DBMD_FN2I_MAP.put("unwrap", 275);
        DBMD_I2FN_MAP.put(276, "isWrapperFor");
        DBMD_FN2I_MAP.put("isWrapperFor", 276);
        RSMD_I2FN_MAP.put(101, "isReadOnly");
        RSMD_FN2I_MAP.put("isReadOnly", 101);
        RSMD_I2FN_MAP.put(102, "getPrecision");
        RSMD_FN2I_MAP.put("getPrecision", 102);
        RSMD_I2FN_MAP.put(103, "getScale");
        RSMD_FN2I_MAP.put("getScale", 103);
        RSMD_I2FN_MAP.put(104, "getTableName");
        RSMD_FN2I_MAP.put("getTableName", 104);
        RSMD_I2FN_MAP.put(105, "isCurrency");
        RSMD_FN2I_MAP.put("isCurrency", 105);
        RSMD_I2FN_MAP.put(106, "isNullable");
        RSMD_FN2I_MAP.put("isNullable", 106);
        RSMD_I2FN_MAP.put(107, "isSearchable");
        RSMD_FN2I_MAP.put("isSearchable", 107);
        RSMD_I2FN_MAP.put(108, "isSigned");
        RSMD_FN2I_MAP.put("isSigned", 108);
        RSMD_I2FN_MAP.put(109, "isWritable");
        RSMD_FN2I_MAP.put("isWritable", 109);
        RSMD_I2FN_MAP.put(110, "getCatalogName");
        RSMD_FN2I_MAP.put("getCatalogName", 110);
        RSMD_I2FN_MAP.put(111, "getColumnClassName");
        RSMD_FN2I_MAP.put("getColumnClassName", 111);
        RSMD_I2FN_MAP.put(112, "getColumnCount");
        RSMD_FN2I_MAP.put("getColumnCount", 112);
        RSMD_I2FN_MAP.put(113, "getColumnDisplaySize");
        RSMD_FN2I_MAP.put("getColumnDisplaySize", 113);
        RSMD_I2FN_MAP.put(114, "getColumnLabel");
        RSMD_FN2I_MAP.put("getColumnLabel", 114);
        RSMD_I2FN_MAP.put(115, "getColumnName");
        RSMD_FN2I_MAP.put("getColumnName", 115);
        RSMD_I2FN_MAP.put(116, "getColumnType");
        RSMD_FN2I_MAP.put("getColumnType", 116);
        RSMD_I2FN_MAP.put(117, "getColumnTypeName");
        RSMD_FN2I_MAP.put("getColumnTypeName", 117);
        RSMD_I2FN_MAP.put(118, "getSchemaName");
        RSMD_FN2I_MAP.put("getSchemaName", 118);
        RSMD_I2FN_MAP.put(119, "isAutoIncrement");
        RSMD_FN2I_MAP.put("isAutoIncrement", 119);
        RSMD_I2FN_MAP.put(120, "isCaseSensitive");
        RSMD_FN2I_MAP.put("isCaseSensitive", 120);
        RSMD_I2FN_MAP.put(121, "isDefinitelyWritable");
        RSMD_FN2I_MAP.put("isDefinitelyWritable", 121);
        RSMD_I2FN_MAP.put(122, "unwrap");
        RSMD_FN2I_MAP.put("unwrap", 122);
        RSMD_I2FN_MAP.put(123, "isWrapperFor");
        RSMD_FN2I_MAP.put("isWrapperFor", 123);
    }



    static {
        RS_I2FN_MAP.put(101, "next");
        RS_FN2I_MAP.put("next", 101);
        RS_I2FN_MAP.put(102, "close");
        RS_FN2I_MAP.put("close", 102);
        RS_I2FN_MAP.put(103, "getType");
        RS_FN2I_MAP.put("getType", 103);
        RS_I2FN_MAP.put(104, "previous");
        RS_FN2I_MAP.put("previous", 104);
        RS_I2FN_MAP.put(105, "absolute");
        RS_FN2I_MAP.put("absolute", 105);
        RS_I2FN_MAP.put(106, "afterLast");
        RS_FN2I_MAP.put("afterLast", 106);
        RS_I2FN_MAP.put(107, "beforeFirst");
        RS_FN2I_MAP.put("beforeFirst", 107);
        RS_I2FN_MAP.put(108, "deleteRow");
        RS_FN2I_MAP.put("deleteRow", 108);
        RS_I2FN_MAP.put(109, "findColumn");
        RS_FN2I_MAP.put("findColumn", 109);
        RS_I2FN_MAP.put(110, "getFetchSize");
        RS_FN2I_MAP.put("getFetchSize", 110);
        RS_I2FN_MAP.put(111, "getRow");
        RS_FN2I_MAP.put("getRow", 111);
        RS_I2FN_MAP.put(112, "getWarnings");
        RS_FN2I_MAP.put("getWarnings", 112);
        RS_I2FN_MAP.put(113, "insertRow");
        RS_FN2I_MAP.put("insertRow", 113);
        RS_I2FN_MAP.put(114, "isAfterLast");
        RS_FN2I_MAP.put("isAfterLast", 114);
        RS_I2FN_MAP.put(115, "isClosed");
        RS_FN2I_MAP.put("isClosed", 115);
        RS_I2FN_MAP.put(116, "isFirst");
        RS_FN2I_MAP.put("isFirst", 116);
        RS_I2FN_MAP.put(117, "isLast");
        RS_FN2I_MAP.put("isLast", 117);
        RS_I2FN_MAP.put(118, "relative");
        RS_FN2I_MAP.put("relative", 118);
        RS_I2FN_MAP.put(119, "setFetchSize");
        RS_FN2I_MAP.put("setFetchSize", 119);
        RS_I2FN_MAP.put(120, "wasNull");
        RS_FN2I_MAP.put("wasNull", 120);
        RS_I2FN_MAP.put(121, "clearWarnings");
        RS_FN2I_MAP.put("clearWarnings", 121);
        RS_I2FN_MAP.put(122, "getConcurrency");
        RS_FN2I_MAP.put("getConcurrency", 122);
        RS_I2FN_MAP.put(123, "getCursorName");
        RS_FN2I_MAP.put("getCursorName", 123);
        RS_I2FN_MAP.put(124, "getFetchDirection");
        RS_FN2I_MAP.put("getFetchDirection", 124);
        RS_I2FN_MAP.put(125, "getHoldability");
        RS_FN2I_MAP.put("getHoldability", 125);
        RS_I2FN_MAP.put(126, "isBeforeFirst");
        RS_FN2I_MAP.put("isBeforeFirst", 126);
        RS_I2FN_MAP.put(127, "setFetchDirection");
        RS_FN2I_MAP.put("setFetchDirection", 127);
        RS_I2FN_MAP.put(128, "first");
        RS_FN2I_MAP.put("first", 128);
        RS_I2FN_MAP.put(129, "last");
        RS_FN2I_MAP.put("last", 129);
    }



    static {
        STMT_I2FN_MAP.put(101, "getObject");
        STMT_FN2I_MAP.put("getObject", 101);
        STMT_I2FN_MAP.put(102, "getObject");
        STMT_FN2I_MAP.put("getObject", 102);
        STMT_I2FN_MAP.put(103, "getObject");
        STMT_FN2I_MAP.put("getObject", 103);
        STMT_I2FN_MAP.put(104, "getObject");
        STMT_FN2I_MAP.put("getObject", 104);
        STMT_I2FN_MAP.put(105, "getObject");
        STMT_FN2I_MAP.put("getObject", 105);
        STMT_I2FN_MAP.put(106, "getObject");
        STMT_FN2I_MAP.put("getObject", 106);
        STMT_I2FN_MAP.put(107, "getBoolean");
        STMT_FN2I_MAP.put("getBoolean", 107);
        STMT_I2FN_MAP.put(108, "getBoolean");
        STMT_FN2I_MAP.put("getBoolean", 108);
        STMT_I2FN_MAP.put(109, "getByte");
        STMT_FN2I_MAP.put("getByte", 109);
        STMT_I2FN_MAP.put(110, "getByte");
        STMT_FN2I_MAP.put("getByte", 110);
        STMT_I2FN_MAP.put(111, "getShort");
        STMT_FN2I_MAP.put("getShort", 111);
        STMT_I2FN_MAP.put(112, "getShort");
        STMT_FN2I_MAP.put("getShort", 112);
        STMT_I2FN_MAP.put(113, "getInt");
        STMT_FN2I_MAP.put("getInt", 113);
        STMT_I2FN_MAP.put(114, "getInt");
        STMT_FN2I_MAP.put("getInt", 114);
        STMT_I2FN_MAP.put(115, "getLong");
        STMT_FN2I_MAP.put("getLong", 115);
        STMT_I2FN_MAP.put(116, "getLong");
        STMT_FN2I_MAP.put("getLong", 116);
        STMT_I2FN_MAP.put(117, "getFloat");
        STMT_FN2I_MAP.put("getFloat", 117);
        STMT_I2FN_MAP.put(118, "getFloat");
        STMT_FN2I_MAP.put("getFloat", 118);
        STMT_I2FN_MAP.put(119, "getDouble");
        STMT_FN2I_MAP.put("getDouble", 119);
        STMT_I2FN_MAP.put(120, "getDouble");
        STMT_FN2I_MAP.put("getDouble", 120);
        STMT_I2FN_MAP.put(121, "getArray");
        STMT_FN2I_MAP.put("getArray", 121);
        STMT_I2FN_MAP.put(122, "getArray");
        STMT_FN2I_MAP.put("getArray", 122);
        STMT_I2FN_MAP.put(123, "getURL");
        STMT_FN2I_MAP.put("getURL", 123);
        STMT_I2FN_MAP.put(124, "getURL");
        STMT_FN2I_MAP.put("getURL", 124);
        STMT_I2FN_MAP.put(125, "setBoolean");
        STMT_FN2I_MAP.put("setBoolean", 125);
        STMT_I2FN_MAP.put(126, "setByte");
        STMT_FN2I_MAP.put("setByte", 126);
        STMT_I2FN_MAP.put(127, "setDouble");
        STMT_FN2I_MAP.put("setDouble", 127);
        STMT_I2FN_MAP.put(128, "setFloat");
        STMT_FN2I_MAP.put("setFloat", 128);
        STMT_I2FN_MAP.put(129, "setInt");
        STMT_FN2I_MAP.put("setInt", 129);
        STMT_I2FN_MAP.put(130, "setLong");
        STMT_FN2I_MAP.put("setLong", 130);
        STMT_I2FN_MAP.put(131, "setShort");
        STMT_FN2I_MAP.put("setShort", 131);
        STMT_I2FN_MAP.put(132, "getBytes");
        STMT_FN2I_MAP.put("getBytes", 132);
        STMT_I2FN_MAP.put(133, "getBytes");
        STMT_FN2I_MAP.put("getBytes", 133);
        STMT_I2FN_MAP.put(134, "setTimestamp");
        STMT_FN2I_MAP.put("setTimestamp", 134);
        STMT_I2FN_MAP.put(135, "setTimestamp");
        STMT_FN2I_MAP.put("setTimestamp", 135);
        STMT_I2FN_MAP.put(136, "getString");
        STMT_FN2I_MAP.put("getString", 136);
        STMT_I2FN_MAP.put(137, "getString");
        STMT_FN2I_MAP.put("getString", 137);
        STMT_I2FN_MAP.put(138, "getRef");
        STMT_FN2I_MAP.put("getRef", 138);
        STMT_I2FN_MAP.put(139, "getRef");
        STMT_FN2I_MAP.put("getRef", 139);
        STMT_I2FN_MAP.put(140, "setURL");
        STMT_FN2I_MAP.put("setURL", 140);
        STMT_I2FN_MAP.put(141, "getDate");
        STMT_FN2I_MAP.put("getDate", 141);
        STMT_I2FN_MAP.put(142, "getDate");
        STMT_FN2I_MAP.put("getDate", 142);
        STMT_I2FN_MAP.put(143, "getDate");
        STMT_FN2I_MAP.put("getDate", 143);
        STMT_I2FN_MAP.put(144, "getDate");
        STMT_FN2I_MAP.put("getDate", 144);
        STMT_I2FN_MAP.put(145, "getBlob");
        STMT_FN2I_MAP.put("getBlob", 145);
        STMT_I2FN_MAP.put(146, "getBlob");
        STMT_FN2I_MAP.put("getBlob", 146);
        STMT_I2FN_MAP.put(147, "getClob");
        STMT_FN2I_MAP.put("getClob", 147);
        STMT_I2FN_MAP.put(148, "getClob");
        STMT_FN2I_MAP.put("getClob", 148);
        STMT_I2FN_MAP.put(149, "getNClob");
        STMT_FN2I_MAP.put("getNClob", 149);
        STMT_I2FN_MAP.put(150, "getNClob");
        STMT_FN2I_MAP.put("getNClob", 150);
        STMT_I2FN_MAP.put(151, "getNString");
        STMT_FN2I_MAP.put("getNString", 151);
        STMT_I2FN_MAP.put(152, "getNString");
        STMT_FN2I_MAP.put("getNString", 152);
        STMT_I2FN_MAP.put(153, "getRowId");
        STMT_FN2I_MAP.put("getRowId", 153);
        STMT_I2FN_MAP.put(154, "getRowId");
        STMT_FN2I_MAP.put("getRowId", 154);
        STMT_I2FN_MAP.put(155, "getSQLXML");
        STMT_FN2I_MAP.put("getSQLXML", 155);
        STMT_I2FN_MAP.put(156, "getSQLXML");
        STMT_FN2I_MAP.put("getSQLXML", 156);
        STMT_I2FN_MAP.put(157, "getTime");
        STMT_FN2I_MAP.put("getTime", 157);
        STMT_I2FN_MAP.put(158, "getTime");
        STMT_FN2I_MAP.put("getTime", 158);
        STMT_I2FN_MAP.put(159, "getTime");
        STMT_FN2I_MAP.put("getTime", 159);
        STMT_I2FN_MAP.put(160, "getTime");
        STMT_FN2I_MAP.put("getTime", 160);
        STMT_I2FN_MAP.put(161, "getTimestamp");
        STMT_FN2I_MAP.put("getTimestamp", 161);
        STMT_I2FN_MAP.put(162, "getTimestamp");
        STMT_FN2I_MAP.put("getTimestamp", 162);
        STMT_I2FN_MAP.put(163, "getTimestamp");
        STMT_FN2I_MAP.put("getTimestamp", 163);
        STMT_I2FN_MAP.put(164, "getTimestamp");
        STMT_FN2I_MAP.put("getTimestamp", 164);
        STMT_I2FN_MAP.put(165, "wasNull");
        STMT_FN2I_MAP.put("wasNull", 165);
        STMT_I2FN_MAP.put(166, "setObject");
        STMT_FN2I_MAP.put("setObject", 166);
        STMT_I2FN_MAP.put(167, "setObject");
        STMT_FN2I_MAP.put("setObject", 167);
        STMT_I2FN_MAP.put(168, "setObject");
        STMT_FN2I_MAP.put("setObject", 168);
        STMT_I2FN_MAP.put(169, "getBigDecimal");
        STMT_FN2I_MAP.put("getBigDecimal", 169);
        STMT_I2FN_MAP.put(170, "getBigDecimal");
        STMT_FN2I_MAP.put("getBigDecimal", 170);
        STMT_I2FN_MAP.put(171, "getBigDecimal");
        STMT_FN2I_MAP.put("getBigDecimal", 171);
        STMT_I2FN_MAP.put(172, "getCharacterStream");
        STMT_FN2I_MAP.put("getCharacterStream", 172);
        STMT_I2FN_MAP.put(173, "getCharacterStream");
        STMT_FN2I_MAP.put("getCharacterStream", 173);
        STMT_I2FN_MAP.put(174, "getNCharacterStream");
        STMT_FN2I_MAP.put("getNCharacterStream", 174);
        STMT_I2FN_MAP.put(175, "getNCharacterStream");
        STMT_FN2I_MAP.put("getNCharacterStream", 175);
        STMT_I2FN_MAP.put(176, "setBinaryStream");
        STMT_FN2I_MAP.put("setBinaryStream", 176);
        STMT_I2FN_MAP.put(177, "setBinaryStream");
        STMT_FN2I_MAP.put("setBinaryStream", 177);
        STMT_I2FN_MAP.put(178, "setBinaryStream");
        STMT_FN2I_MAP.put("setBinaryStream", 178);
        STMT_I2FN_MAP.put(179, "setAsciiStream");
        STMT_FN2I_MAP.put("setAsciiStream", 179);
        STMT_I2FN_MAP.put(180, "setAsciiStream");
        STMT_FN2I_MAP.put("setAsciiStream", 180);
        STMT_I2FN_MAP.put(181, "setAsciiStream");
        STMT_FN2I_MAP.put("setAsciiStream", 181);
        STMT_I2FN_MAP.put(182, "setCharacterStream");
        STMT_FN2I_MAP.put("setCharacterStream", 182);
        STMT_I2FN_MAP.put(183, "setCharacterStream");
        STMT_FN2I_MAP.put("setCharacterStream", 183);
        STMT_I2FN_MAP.put(184, "setCharacterStream");
        STMT_FN2I_MAP.put("setCharacterStream", 184);
        STMT_I2FN_MAP.put(185, "setTime");
        STMT_FN2I_MAP.put("setTime", 185);
        STMT_I2FN_MAP.put(186, "setTime");
        STMT_FN2I_MAP.put("setTime", 186);
        STMT_I2FN_MAP.put(187, "setDate");
        STMT_FN2I_MAP.put("setDate", 187);
        STMT_I2FN_MAP.put(188, "setDate");
        STMT_FN2I_MAP.put("setDate", 188);
        STMT_I2FN_MAP.put(189, "setBytes");
        STMT_FN2I_MAP.put("setBytes", 189);
        STMT_I2FN_MAP.put(190, "setString");
        STMT_FN2I_MAP.put("setString", 190);
        STMT_I2FN_MAP.put(191, "setBlob");
        STMT_FN2I_MAP.put("setBlob", 191);
        STMT_I2FN_MAP.put(192, "setBlob");
        STMT_FN2I_MAP.put("setBlob", 192);
        STMT_I2FN_MAP.put(193, "setBlob");
        STMT_FN2I_MAP.put("setBlob", 193);
        STMT_I2FN_MAP.put(194, "setClob");
        STMT_FN2I_MAP.put("setClob", 194);
        STMT_I2FN_MAP.put(195, "setClob");
        STMT_FN2I_MAP.put("setClob", 195);
        STMT_I2FN_MAP.put(196, "setClob");
        STMT_FN2I_MAP.put("setClob", 196);
        STMT_I2FN_MAP.put(197, "setNClob");
        STMT_FN2I_MAP.put("setNClob", 197);
        STMT_I2FN_MAP.put(198, "setNClob");
        STMT_FN2I_MAP.put("setNClob", 198);
        STMT_I2FN_MAP.put(199, "setNClob");
        STMT_FN2I_MAP.put("setNClob", 199);
        STMT_I2FN_MAP.put(200, "setNString");
        STMT_FN2I_MAP.put("setNString", 200);
        STMT_I2FN_MAP.put(201, "setNull");
        STMT_FN2I_MAP.put("setNull", 201);
        STMT_I2FN_MAP.put(202, "setNull");
        STMT_FN2I_MAP.put("setNull", 202);
        STMT_I2FN_MAP.put(203, "setRowId");
        STMT_FN2I_MAP.put("setRowId", 203);
        STMT_I2FN_MAP.put(204, "setSQLXML");
        STMT_FN2I_MAP.put("setSQLXML", 204);
        STMT_I2FN_MAP.put(205, "registerOutParameter");
        STMT_FN2I_MAP.put("registerOutParameter", 205);
        STMT_I2FN_MAP.put(206, "registerOutParameter");
        STMT_FN2I_MAP.put("registerOutParameter", 206);
        STMT_I2FN_MAP.put(207, "registerOutParameter");
        STMT_FN2I_MAP.put("registerOutParameter", 207);
        STMT_I2FN_MAP.put(208, "registerOutParameter");
        STMT_FN2I_MAP.put("registerOutParameter", 208);
        STMT_I2FN_MAP.put(209, "registerOutParameter");
        STMT_FN2I_MAP.put("registerOutParameter", 209);
        STMT_I2FN_MAP.put(210, "registerOutParameter");
        STMT_FN2I_MAP.put("registerOutParameter", 210);
        STMT_I2FN_MAP.put(211, "setBigDecimal");
        STMT_FN2I_MAP.put("setBigDecimal", 211);
        STMT_I2FN_MAP.put(212, "setNCharacterStream");
        STMT_FN2I_MAP.put("setNCharacterStream", 212);
        STMT_I2FN_MAP.put(213, "setNCharacterStream");
        STMT_FN2I_MAP.put("setNCharacterStream", 213);
        STMT_I2FN_MAP.put(214, "setBoolean");
        STMT_FN2I_MAP.put("setBoolean", 214);
        STMT_I2FN_MAP.put(215, "setByte");
        STMT_FN2I_MAP.put("setByte", 215);
        STMT_I2FN_MAP.put(216, "setDouble");
        STMT_FN2I_MAP.put("setDouble", 216);
        STMT_I2FN_MAP.put(217, "setFloat");
        STMT_FN2I_MAP.put("setFloat", 217);
        STMT_I2FN_MAP.put(218, "setInt");
        STMT_FN2I_MAP.put("setInt", 218);
        STMT_I2FN_MAP.put(219, "setLong");
        STMT_FN2I_MAP.put("setLong", 219);
        STMT_I2FN_MAP.put(220, "setShort");
        STMT_FN2I_MAP.put("setShort", 220);
        STMT_I2FN_MAP.put(221, "setTimestamp");
        STMT_FN2I_MAP.put("setTimestamp", 221);
        STMT_I2FN_MAP.put(222, "setTimestamp");
        STMT_FN2I_MAP.put("setTimestamp", 222);
        STMT_I2FN_MAP.put(223, "setURL");
        STMT_FN2I_MAP.put("setURL", 223);
        STMT_I2FN_MAP.put(224, "getMetaData");
        STMT_FN2I_MAP.put("getMetaData", 224);
        STMT_I2FN_MAP.put(225, "setObject");
        STMT_FN2I_MAP.put("setObject", 225);
        STMT_I2FN_MAP.put(226, "setObject");
        STMT_FN2I_MAP.put("setObject", 226);
        STMT_I2FN_MAP.put(227, "setObject");
        STMT_FN2I_MAP.put("setObject", 227);
        STMT_I2FN_MAP.put(228, "addBatch");
        STMT_FN2I_MAP.put("addBatch", 228);
        STMT_I2FN_MAP.put(229, "setBinaryStream");
        STMT_FN2I_MAP.put("setBinaryStream", 229);
        STMT_I2FN_MAP.put(230, "setBinaryStream");
        STMT_FN2I_MAP.put("setBinaryStream", 230);
        STMT_I2FN_MAP.put(231, "setBinaryStream");
        STMT_FN2I_MAP.put("setBinaryStream", 231);
        STMT_I2FN_MAP.put(232, "setAsciiStream");
        STMT_FN2I_MAP.put("setAsciiStream", 232);
        STMT_I2FN_MAP.put(233, "setAsciiStream");
        STMT_FN2I_MAP.put("setAsciiStream", 233);
        STMT_I2FN_MAP.put(234, "setAsciiStream");
        STMT_FN2I_MAP.put("setAsciiStream", 234);
        STMT_I2FN_MAP.put(235, "setCharacterStream");
        STMT_FN2I_MAP.put("setCharacterStream", 235);
        STMT_I2FN_MAP.put(236, "setCharacterStream");
        STMT_FN2I_MAP.put("setCharacterStream", 236);
        STMT_I2FN_MAP.put(237, "setCharacterStream");
        STMT_FN2I_MAP.put("setCharacterStream", 237);
        STMT_I2FN_MAP.put(238, "setTime");
        STMT_FN2I_MAP.put("setTime", 238);
        STMT_I2FN_MAP.put(239, "setTime");
        STMT_FN2I_MAP.put("setTime", 239);
        STMT_I2FN_MAP.put(240, "setDate");
        STMT_FN2I_MAP.put("setDate", 240);
        STMT_I2FN_MAP.put(241, "setDate");
        STMT_FN2I_MAP.put("setDate", 241);
        STMT_I2FN_MAP.put(242, "setBytes");
        STMT_FN2I_MAP.put("setBytes", 242);
        STMT_I2FN_MAP.put(243, "setString");
        STMT_FN2I_MAP.put("setString", 243);
        STMT_I2FN_MAP.put(244, "setBlob");
        STMT_FN2I_MAP.put("setBlob", 244);
        STMT_I2FN_MAP.put(245, "setBlob");
        STMT_FN2I_MAP.put("setBlob", 245);
        STMT_I2FN_MAP.put(246, "setBlob");
        STMT_FN2I_MAP.put("setBlob", 246);
        STMT_I2FN_MAP.put(247, "setClob");
        STMT_FN2I_MAP.put("setClob", 247);
        STMT_I2FN_MAP.put(248, "setClob");
        STMT_FN2I_MAP.put("setClob", 248);
        STMT_I2FN_MAP.put(249, "setClob");
        STMT_FN2I_MAP.put("setClob", 249);
        STMT_I2FN_MAP.put(250, "setNClob");
        STMT_FN2I_MAP.put("setNClob", 250);
        STMT_I2FN_MAP.put(251, "setNClob");
        STMT_FN2I_MAP.put("setNClob", 251);
        STMT_I2FN_MAP.put(252, "setNClob");
        STMT_FN2I_MAP.put("setNClob", 252);
        STMT_I2FN_MAP.put(253, "setNString");
        STMT_FN2I_MAP.put("setNString", 253);
        STMT_I2FN_MAP.put(254, "setNull");
        STMT_FN2I_MAP.put("setNull", 254);
        STMT_I2FN_MAP.put(255, "setNull");
        STMT_FN2I_MAP.put("setNull", 255);
        STMT_I2FN_MAP.put(256, "setRowId");
        STMT_FN2I_MAP.put("setRowId", 256);
        STMT_I2FN_MAP.put(257, "setSQLXML");
        STMT_FN2I_MAP.put("setSQLXML", 257);
        STMT_I2FN_MAP.put(258, "setArray");
        STMT_FN2I_MAP.put("setArray", 258);
        STMT_I2FN_MAP.put(259, "setRef");
        STMT_FN2I_MAP.put("setRef", 259);
        STMT_I2FN_MAP.put(260, "clearParameters");
        STMT_FN2I_MAP.put("clearParameters", 260);
        STMT_I2FN_MAP.put(261, "setBigDecimal");
        STMT_FN2I_MAP.put("setBigDecimal", 261);
        STMT_I2FN_MAP.put(262, "setNCharacterStream");
        STMT_FN2I_MAP.put("setNCharacterStream", 262);
        STMT_I2FN_MAP.put(263, "setNCharacterStream");
        STMT_FN2I_MAP.put("setNCharacterStream", 263);
        STMT_I2FN_MAP.put(264, "getParameterMetaData");
        STMT_FN2I_MAP.put("getParameterMetaData", 264);
        STMT_I2FN_MAP.put(265, "setUnicodeStream");
        STMT_FN2I_MAP.put("setUnicodeStream", 265);
        STMT_I2FN_MAP.put(266, "close");
        STMT_FN2I_MAP.put("close", 266);
        STMT_I2FN_MAP.put(267, "getFetchSize");
        STMT_FN2I_MAP.put("getFetchSize", 267);
        STMT_I2FN_MAP.put(268, "getWarnings");
        STMT_FN2I_MAP.put("getWarnings", 268);
        STMT_I2FN_MAP.put(269, "isClosed");
        STMT_FN2I_MAP.put("isClosed", 269);
        STMT_I2FN_MAP.put(270, "setFetchSize");
        STMT_FN2I_MAP.put("setFetchSize", 270);
        STMT_I2FN_MAP.put(271, "getResultSet");
        STMT_FN2I_MAP.put("getResultSet", 271);
        STMT_I2FN_MAP.put(272, "addBatch");
        STMT_FN2I_MAP.put("addBatch", 272);
        STMT_I2FN_MAP.put(273, "cancel");
        STMT_FN2I_MAP.put("cancel", 273);
        STMT_I2FN_MAP.put(274, "clearWarnings");
        STMT_FN2I_MAP.put("clearWarnings", 274);
        STMT_I2FN_MAP.put(275, "getFetchDirection");
        STMT_FN2I_MAP.put("getFetchDirection", 275);
        STMT_I2FN_MAP.put(276, "setFetchDirection");
        STMT_FN2I_MAP.put("setFetchDirection", 276);
        STMT_I2FN_MAP.put(277, "closeOnCompletion");
        STMT_FN2I_MAP.put("closeOnCompletion", 277);
        STMT_I2FN_MAP.put(278, "getGeneratedKeys");
        STMT_FN2I_MAP.put("getGeneratedKeys", 278);
        STMT_I2FN_MAP.put(279, "getMaxFieldSize");
        STMT_FN2I_MAP.put("getMaxFieldSize", 279);
        STMT_I2FN_MAP.put(280, "getMoreResults");
        STMT_FN2I_MAP.put("getMoreResults", 280);
        STMT_I2FN_MAP.put(281, "getMoreResults");
        STMT_FN2I_MAP.put("getMoreResults", 281);
        STMT_I2FN_MAP.put(282, "getQueryTimeout");
        STMT_FN2I_MAP.put("getQueryTimeout", 282);
        STMT_I2FN_MAP.put(283, "getResultSetConcurrency");
        STMT_FN2I_MAP.put("getResultSetConcurrency", 283);
        STMT_I2FN_MAP.put(284, "getResultSetType");
        STMT_FN2I_MAP.put("getResultSetType", 284);
        STMT_I2FN_MAP.put(285, "getUpdateCount");
        STMT_FN2I_MAP.put("getUpdateCount", 285);
        STMT_I2FN_MAP.put(286, "isCloseOnCompletion");
        STMT_FN2I_MAP.put("isCloseOnCompletion", 286);
        STMT_I2FN_MAP.put(287, "setCursorName");
        STMT_FN2I_MAP.put("setCursorName", 287);
        STMT_I2FN_MAP.put(288, "setEscapeProcessing");
        STMT_FN2I_MAP.put("setEscapeProcessing", 288);
        STMT_I2FN_MAP.put(289, "setMaxFieldSize");
        STMT_FN2I_MAP.put("setMaxFieldSize", 289);
        STMT_I2FN_MAP.put(290, "setQueryTimeout");
        STMT_FN2I_MAP.put("setQueryTimeout", 290);
        STMT_I2FN_MAP.put(291, "getConnection");
        STMT_FN2I_MAP.put("getConnection", 291);
        STMT_I2FN_MAP.put(292, "getResultSetHoldability");
        STMT_FN2I_MAP.put("getResultSetHoldability", 292);
        STMT_I2FN_MAP.put(293, "clearBatch");
        STMT_FN2I_MAP.put("clearBatch", 293);
        STMT_I2FN_MAP.put(294, "getMaxRows");
        STMT_FN2I_MAP.put("getMaxRows", 294);
        STMT_I2FN_MAP.put(295, "isPoolable");
        STMT_FN2I_MAP.put("isPoolable", 295);
        STMT_I2FN_MAP.put(296, "setMaxRows");
        STMT_FN2I_MAP.put("setMaxRows", 296);
        STMT_I2FN_MAP.put(297, "setPoolable");
        STMT_FN2I_MAP.put("setPoolable", 297);
    }



    static {
        PARAMMD_I2FN_MAP.put(101, "getPrecision");
        PARAMMD_FN2I_MAP.put("getPrecision", 101);
        PARAMMD_I2FN_MAP.put(102, "getScale");
        PARAMMD_FN2I_MAP.put("getScale", 102);
        PARAMMD_I2FN_MAP.put(103, "isNullable");
        PARAMMD_FN2I_MAP.put("isNullable", 103);
        PARAMMD_I2FN_MAP.put(104, "isSigned");
        PARAMMD_FN2I_MAP.put("isSigned", 104);
        PARAMMD_I2FN_MAP.put(105, "getParameterClassName");
        PARAMMD_FN2I_MAP.put("getParameterClassName", 105);
        PARAMMD_I2FN_MAP.put(106, "getParameterCount");
        PARAMMD_FN2I_MAP.put("getParameterCount", 106);
        PARAMMD_I2FN_MAP.put(107, "getParameterMode");
        PARAMMD_FN2I_MAP.put("getParameterMode", 107);
        PARAMMD_I2FN_MAP.put(108, "getParameterType");
        PARAMMD_FN2I_MAP.put("getParameterType", 108);
        PARAMMD_I2FN_MAP.put(109, "getParameterTypeName");
        PARAMMD_FN2I_MAP.put("getParameterTypeName", 109);
        PARAMMD_I2FN_MAP.put(110, "unwrap");
        PARAMMD_FN2I_MAP.put("unwrap", 110);
        PARAMMD_I2FN_MAP.put(111, "isWrapperFor");
        PARAMMD_FN2I_MAP.put("isWrapperFor", 111);
    }



    static {
        STMT_I2FN_MAP.put(101, "setReadOnly");
        STMT_FN2I_MAP.put("setReadOnly", 101);
        STMT_I2FN_MAP.put(102, "close");
        STMT_FN2I_MAP.put("close", 102);
        STMT_I2FN_MAP.put(103, "isValid");
        STMT_FN2I_MAP.put("isValid", 103);
        STMT_I2FN_MAP.put(104, "isReadOnly");
        STMT_FN2I_MAP.put("isReadOnly", 104);
        STMT_I2FN_MAP.put(105, "abort");
        STMT_FN2I_MAP.put("abort", 105);
        STMT_I2FN_MAP.put(106, "getMetaData");
        STMT_FN2I_MAP.put("getMetaData", 106);
        STMT_I2FN_MAP.put(107, "getWarnings");
        STMT_FN2I_MAP.put("getWarnings", 107);
        STMT_I2FN_MAP.put(108, "isClosed");
        STMT_FN2I_MAP.put("isClosed", 108);
        STMT_I2FN_MAP.put(109, "commit");
        STMT_FN2I_MAP.put("commit", 109);
        STMT_I2FN_MAP.put(110, "createBlob");
        STMT_FN2I_MAP.put("createBlob", 110);
        STMT_I2FN_MAP.put(111, "createClob");
        STMT_FN2I_MAP.put("createClob", 111);
        STMT_I2FN_MAP.put(112, "createNClob");
        STMT_FN2I_MAP.put("createNClob", 112);
        STMT_I2FN_MAP.put(113, "createSQLXML");
        STMT_FN2I_MAP.put("createSQLXML", 113);
        STMT_I2FN_MAP.put(114, "createStruct");
        STMT_FN2I_MAP.put("createStruct", 114);
        STMT_I2FN_MAP.put(115, "getCatalog");
        STMT_FN2I_MAP.put("getCatalog", 115);
        STMT_I2FN_MAP.put(116, "getSchema");
        STMT_FN2I_MAP.put("getSchema", 116);
        STMT_I2FN_MAP.put(117, "getTypeMap");
        STMT_FN2I_MAP.put("getTypeMap", 117);
        STMT_I2FN_MAP.put(118, "nativeSQL");
        STMT_FN2I_MAP.put("nativeSQL", 118);
        STMT_I2FN_MAP.put(119, "prepareCall");
        STMT_FN2I_MAP.put("prepareCall", 119);
        STMT_I2FN_MAP.put(120, "prepareCall");
        STMT_FN2I_MAP.put("prepareCall", 120);
        STMT_I2FN_MAP.put(121, "prepareCall");
        STMT_FN2I_MAP.put("prepareCall", 121);
        STMT_I2FN_MAP.put(122, "rollback");
        STMT_FN2I_MAP.put("rollback", 122);
        STMT_I2FN_MAP.put(123, "rollback");
        STMT_FN2I_MAP.put("rollback", 123);
        STMT_I2FN_MAP.put(124, "setCatalog");
        STMT_FN2I_MAP.put("setCatalog", 124);
        STMT_I2FN_MAP.put(125, "setSavepoint");
        STMT_FN2I_MAP.put("setSavepoint", 125);
        STMT_I2FN_MAP.put(126, "setSavepoint");
        STMT_FN2I_MAP.put("setSavepoint", 126);
        STMT_I2FN_MAP.put(127, "setSchema");
        STMT_FN2I_MAP.put("setSchema", 127);
        STMT_I2FN_MAP.put(128, "setTypeMap");
        STMT_FN2I_MAP.put("setTypeMap", 128);
        STMT_I2FN_MAP.put(129, "clearWarnings");
        STMT_FN2I_MAP.put("clearWarnings", 129);
        STMT_I2FN_MAP.put(130, "getHoldability");
        STMT_FN2I_MAP.put("getHoldability", 130);
        STMT_I2FN_MAP.put(131, "createArrayOf");
        STMT_FN2I_MAP.put("createArrayOf", 131);
        STMT_I2FN_MAP.put(132, "createStatement");
        STMT_FN2I_MAP.put("createStatement", 132);
        STMT_I2FN_MAP.put(133, "createStatement");
        STMT_FN2I_MAP.put("createStatement", 133);
        STMT_I2FN_MAP.put(134, "createStatement");
        STMT_FN2I_MAP.put("createStatement", 134);
        STMT_I2FN_MAP.put(135, "getAutoCommit");
        STMT_FN2I_MAP.put("getAutoCommit", 135);
        STMT_I2FN_MAP.put(136, "getClientInfo");
        STMT_FN2I_MAP.put("getClientInfo", 136);
        STMT_I2FN_MAP.put(137, "getClientInfo");
        STMT_FN2I_MAP.put("getClientInfo", 137);
        STMT_I2FN_MAP.put(138, "getNetworkTimeout");
        STMT_FN2I_MAP.put("getNetworkTimeout", 138);
        STMT_I2FN_MAP.put(139, "getTransactionIsolation");
        STMT_FN2I_MAP.put("getTransactionIsolation", 139);
        STMT_I2FN_MAP.put(140, "prepareStatement");
        STMT_FN2I_MAP.put("prepareStatement", 140);
        STMT_I2FN_MAP.put(141, "prepareStatement");
        STMT_FN2I_MAP.put("prepareStatement", 141);
        STMT_I2FN_MAP.put(142, "prepareStatement");
        STMT_FN2I_MAP.put("prepareStatement", 142);
        STMT_I2FN_MAP.put(143, "prepareStatement");
        STMT_FN2I_MAP.put("prepareStatement", 143);
        STMT_I2FN_MAP.put(144, "prepareStatement");
        STMT_FN2I_MAP.put("prepareStatement", 144);
        STMT_I2FN_MAP.put(145, "prepareStatement");
        STMT_FN2I_MAP.put("prepareStatement", 145);
        STMT_I2FN_MAP.put(146, "releaseSavepoint");
        STMT_FN2I_MAP.put("releaseSavepoint", 146);
        STMT_I2FN_MAP.put(147, "setAutoCommit");
        STMT_FN2I_MAP.put("setAutoCommit", 147);
        STMT_I2FN_MAP.put(148, "setClientInfo");
        STMT_FN2I_MAP.put("setClientInfo", 148);
        STMT_I2FN_MAP.put(149, "setClientInfo");
        STMT_FN2I_MAP.put("setClientInfo", 149);
        STMT_I2FN_MAP.put(150, "setHoldability");
        STMT_FN2I_MAP.put("setHoldability", 150);
        STMT_I2FN_MAP.put(151, "setNetworkTimeout");
        STMT_FN2I_MAP.put("setNetworkTimeout", 151);
        STMT_I2FN_MAP.put(152, "setTransactionIsolation");
        STMT_FN2I_MAP.put("setTransactionIsolation", 152);
    }



}


